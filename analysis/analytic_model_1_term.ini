[General]
; Output directory
output = rundir/analytic_model_1_term_both_noise_sources/
; Label
label = analytic_model_1_term_both_noise_sources
; Path to data
datafile = ../data/PyTotalAnalysis_2024_02_23.mat
injection = False
indices = "all"
seed = 1234
plot = True

[Model]
name = GenericAnalyticGaussianBeam
; Name of the equation to use
equation_name = General_Equation_1_Terms
; Number of terms in the ERF expansion
n_terms = 1
; Think this isn't actually used
photodiode-size = 10.2e-3
; These values are set based on Simon's measurements
; All in units of mm originally
photodiode-gap = 0.05e-3
; Beam radius
beam_radius = 3.3e-3
; Include the gap
include_gap = True
; Enforce a_1 > a_2, remove this if sampling 'a_ratio'
amplitude_constraint = False
; Priors bounds
prior_bounds = {"a_1": [1e-8, 1e-2], "a_ratio": [0, 1], "a_scale": [1e-2, 1e1], "dphi": [0, 6.283185307179586], "domega": [0, 1], "tau_1": [0, 3000], "tau_2": [0, 3000], "sigma_amp_noise": [0.0, 1.0], "sigma_constant_noise": [0.0, 1], "x_offset": [0.0, 1e-4]}

[Analysis]
; n-pool will be set automatically if submitting via HTCondor/Slurm
resume = True

[Sampler]
nlive = 1000
; Uncomment this to force torch to use float64
; torch_dtype = "float64"
flow_class = "mcmcflowproposal"
step_type = "gaussian"
n_steps = 100
reset_flow = True
flow_config = {"patience": 10, "model_config": {"n_neurons": 32, "n_blocks": 6, "ftype": "glasflow-realnvp", "kwargs": {"linear_transform": None, "batch_norm_between_transforms": True, "scale_activation": "log3"}}}
use_default_reparameterisations = True
fallback_reparameterisation = "z-score"

[HTCondor]
request-cpus = 16
request-memory = 4GB
request-disk = 4GB
accounting-group = aluk.dev.o4.cbc.pe
accounting-group-user = michael.williams